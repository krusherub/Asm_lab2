;-------------------I ЗАГОЛОВОК---------------------------------------------------
TITLE ЛР_2 
IDEAL			; Директива - тип Асемблера tasm 
MODEL small		; Директива - тип моделі пам’яті 
STACK 512		; Директива - розмір стеку 

;-------------------II МАКРОСИ_---------------------------------------------------
;Макрос для ініціалізації
MACRO Macrosus   ; Початок макросу 
mov  ax, @data    ; ax <- @data
mov  ds, ax      ; ds <- ax
mov  es, ax      ; es <- ax
ENDM Macrosus      ; Кінець макросу

;-------------------III Початок сегменту даних------------------------------------

    DATASEG

exCode db 0                                     ; Код завершення роботи застосунку

rect_line dw 2131h, 2131h, 2131h, 2131h, 2131h,2131h, 2131h, 2131h, 2131h, 2131h  ; Рядок, який буде надрукований 
         
         dw 2131h, 2131h, 2131h, 2131h, 2131h
         dw 2131h, 2131h, 2131h, 2131h, 2131h
rect_line_length = $-rect_line                  ; Довжина одного рядка 

;-------------------IV Початок СЕГМЕНТУ КОДУ------------------------------------	
CODESEG
Start:
Macrosus

	
;------------------VARIANT 2------------------------------------
	mov dx, 644                    ; Зміщення лівого верхньго кутка у координати (40?; 2)
    mov cx, 10                      ; Лічильник кіл-сті ітерацій циклу, який буде друкувати рядки
	
	loopStart:                          ; Мітка початку циклу
                                    ; Регістр сх використовується з преф. rep у movsb, тому спочатку потрібно його знач. зберігти в іншр регістрі 
    mov bx, cx                      ; Запис сх до bx
    mov ax, 0B800h                  ; Cегментна адресса відеопам'яті
    mov es, ax                      ; es <- ax

    mov di, dx                      ; di <- dx, початок виведення на екран
    mov si, offset rect_line        ; si <- rect_line
    mov cx, rect_line_length        ; Число байтів
    cld                             ; df встановл. напрям вперед
    rep movsb                       ; Пересил.
    mov cx, bx                      ; Команда rep movsb завершилась і знач. сх можно поверн. з bx
    add dx, 160                     ; Зміщ. наступного рядка
loop loopStart                      ; Цикл виконуватиметься доки ліч. не буде 0


Exit:
     mov ah, 04ch
     mov al, [exCode]               ; Отрим. коду виходу
     int 21h                        ; Виклик переривання 21h для того, щоб призупинити виконання і  дочекатись доки користувач натисне якусь клавішу

end Start


	